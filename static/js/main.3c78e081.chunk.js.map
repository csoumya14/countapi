{"version":3,"sources":["components/FilterRegion.js","components/Filter.js","components/CountryList.js","components/Country.js","components/Title.js","theme.js","global.js","App.js","useDarkMode.js","index.js"],"names":["Main","styled","div","DropDownContainer","DropDownHeader","theme","text","background","DropDownListContainer","DropDownList","ul","ListItem","li","Options","FilterRegion","setChosenRegion","chosenRegion","useState","isOpen","setIsOpen","onClick","value","map","option","key","Math","random","Input","input","inputBackgroundColor","Filter","chosenCountry","handleFilterChange","onChange","placeholder","CardStyle","width","marginBottom","marginRight","CardTextStyle","fontSize","color","lineHeight","CardTitleStyle","marginTop","paddingTop","height","fontWeight","ButtonStyle","padding","CountryList","countriesToShow","setChosenCountry","history","useHistory","length","countriesToDisplay","slice","className","Container","Row","xs","md","country","Col","name","Card","style","Img","variant","src","flag","Body","Title","Text","population","region","capital","Button","push","size","fluid","span","offset","h1","Paragraph","button","Country","icon","faArrowLeft","Image","alt","nativeName","subregion","topLevelDomain","currencies","currency","languages","lan","join","Titles","toggleTheme","faMoon","lightTheme","backgroundColor","darkTheme","GlobalStyles","createGlobalStyle","App","countries","setCountries","setTheme","useEffect","localTheme","window","localStorage","getItem","setItem","useDarkMode","Axios","get","then","response","data","console","log","filter","toLowerCase","includes","basename","process","path","sm","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c78e081.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nimport styled from 'styled-components'\n\nconst Main = styled.div`\n  font-family: sans-serif;\n\n  width: 10.5em;\n\n  float: right;\n\n  margin-bottom: 0.8em;\n`\n\nconst DropDownContainer = styled.div`\n  width: 10.5em;\n  border: 1px solid hhh;\n  margin-top: 13px;\n`\nconst DropDownHeader = styled.div`\n  box-sizing: border-box;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.15);\n\n  border-radius: 4px;\n  font-family: Nunito Sans;\n  font-weight: 300;\n  font-size: 14px;\n  text-align: center;\n  margin-right: 15px;\n  padding: 12px 20px 12px 40px;\n\n  color: ${({ theme }) => theme.text};\n  background: ${({ theme }) => theme.background};\n`\nconst DropDownListContainer = styled.div``\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  padding-left: 1em;\n  background: ${({ theme }) => theme.background};\n\n  border: 2px solid #e5e5e5;\n  box-sizing: border-box;\n  color: ${({ theme }) => theme.text};\n  font-size: 14px;\n  font-weight: 300;\n  &:first-child {\n    padding-top: 0.8em;\n  }\n`\nconst ListItem = styled.li`\n  list-style: none;\n  margin-bottom: 0.8em;\n`\nconst Options = ['Asia', 'Europe', 'America', 'Oceania', 'Africa']\nconst FilterRegion = ({ setChosenRegion, chosenRegion }) => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const onOptionClicked = (value) => () => {\n    setChosenRegion(value)\n    setIsOpen(false)\n  }\n\n  return (\n    <Main>\n      <DropDownContainer>\n        <DropDownHeader\n          onClick={() => {\n            setIsOpen(!isOpen)\n            setChosenRegion('')\n          }}\n        >\n          {chosenRegion || 'Filter by Region'}\n        </DropDownHeader>\n      </DropDownContainer>\n      {isOpen && (\n        <DropDownListContainer>\n          <DropDownList value={chosenRegion}>\n            {Options.map((option) => (\n              <ListItem onClick={onOptionClicked(option)} key={Math.random()}>\n                {option}\n              </ListItem>\n            ))}\n          </DropDownList>\n        </DropDownListContainer>\n      )}\n    </Main>\n  )\n}\n\nexport default FilterRegion\n","import React from 'react'\nimport styled from 'styled-components'\nconst Input = styled.input`\n  border-radius: 4px;\n  margin-left: 14px;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.15);\n  border: none;\n  font-size: 16px;\n  background: ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.inputBackgroundColor};\n  background-position: 10px 10px;\n  background-repeat: no-repeat;\n  padding: 12px 20px 12px 40px;\n\n  margin-top: 12px;\n`\n\nconst Filter = ({ chosenCountry, handleFilterChange }) => {\n  return (\n    <div>\n      <Input\n        value={chosenCountry}\n        onChange={handleFilterChange}\n        placeholder=\"Search for a country\"\n      />\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nimport { Card } from 'react-bootstrap'\nimport { Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst CardStyle = {\n  width: '10rem',\n  marginBottom: '50px',\n  marginRight: '10px',\n  background: 'hsl(255, 20%, 50%)',\n}\n\nconst CardTextStyle = {\n  fontSize: '14px',\n  width: '100%',\n  color: 'hsl(200, 15%, 8%)',\n  lineHeight: '1.3',\n}\n\nconst CardTitleStyle = {\n  marginTop: '0px',\n  paddingTop: '0px',\n  fontSize: '14px',\n  width: '100%',\n  height: '50%',\n  color: 'hsl(200, 15%, 8%)',\n  fontWeight: '600',\n}\n\nconst ButtonStyle = {\n  marginTop: '0px',\n  padding: '0px 0px 5px 0px',\n}\n\nconst CountryList = ({ countriesToShow, setChosenCountry }) => {\n  const history = useHistory()\n\n  switch (true) {\n    case countriesToShow.length > 10: {\n      const countriesToDisplay = countriesToShow.slice(0, 8)\n      return (\n        <div className=\"grid-container\">\n          <Container>\n            <Row xs=\"1\" md=\"4\">\n              {countriesToDisplay.map((country) => {\n                return (\n                  <Col key={country.name}>\n                    <Card style={CardStyle}>\n                      <Card.Img variant=\"top\" src={country.flag} style={{ height: '8rem' }} />\n                      <Card.Body>\n                        <Card.Title style={CardTitleStyle}>{country.name}</Card.Title>\n                        <Card.Text style={CardTextStyle}>\n                          Population:{country.population}\n                          {'\\n'}\n                          Region:{country.region}\n                          {'\\n'}\n                          Capital:{country.capital}\n                          {'\\n'}\n                        </Card.Text>\n                        <Button\n                          onClick={() => {\n                            setChosenCountry(country.name)\n                            history.push('/country')\n                          }}\n                          variant=\"outline-info\"\n                          size=\"sm\"\n                          style={ButtonStyle}\n                        >\n                          show\n                        </Button>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                )\n              })}\n            </Row>\n          </Container>\n        </div>\n      )\n    }\n    case countriesToShow.length > 1 && countriesToShow.length < 10: {\n      return (\n        <div className=\"grid-container\">\n          <Container fluid style={{ lineHeight: '32px' }}>\n            <Row xs=\"1\" md=\"4\">\n              {countriesToShow.map((country) => {\n                return (\n                  <Col key={country.name}>\n                    <Card style={CardStyle}>\n                      <Card.Img variant=\"top\" src={country.flag} style={{ height: '8rem' }} />\n                      <Card.Body>\n                        <Card.Title style={CardTitleStyle}>{country.name}</Card.Title>\n                        <Card.Text style={CardTextStyle}>\n                          Population:{country.population}\n                          {'\\n'}\n                          Region:{country.region}\n                          {'\\n'}\n                          Capital:{country.capital}\n                          {'\\n'}\n                        </Card.Text>\n\n                        <Button\n                          onClick={() => {\n                            setChosenCountry(country.name)\n                            history.push('/country')\n                          }}\n                          variant=\"outline-info\"\n                          size=\"sm\"\n                        >\n                          show\n                        </Button>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                )\n              })}\n            </Row>\n          </Container>\n        </div>\n      )\n    }\n\n    case countriesToShow.length === 1: {\n      return (\n        <div className=\"grid-container\">\n          <Container>\n            <Row md=\"1\">\n              <Col md={{ span: 3, offset: 5 }} key={countriesToShow[0].name}>\n                <Card style={CardStyle}>\n                  <Card.Img\n                    variant=\"top\"\n                    src={countriesToShow[0].flag}\n                    style={{ height: '8rem' }}\n                  />\n                  <Card.Body>\n                    <Card.Title style={CardTitleStyle}>{countriesToShow[0].name}</Card.Title>\n                    <Card.Text style={CardTextStyle}>\n                      Population:{countriesToShow[0].population}\n                      {'\\n'}\n                      Region:{countriesToShow[0].region}\n                      {'\\n'}\n                      Capital:{countriesToShow[0].capital}\n                      {'\\n'}\n                    </Card.Text>\n\n                    <Button\n                      onClick={() => {\n                        setChosenCountry(countriesToShow[0].name)\n                        history.push('/country')\n                      }}\n                      variant=\"outline-info\"\n                      size=\"sm\"\n                    >\n                      show\n                    </Button>\n                  </Card.Body>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      )\n    }\n    default:\n      return null\n  }\n}\n\nexport default CountryList\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Image } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\n\nconst Main = styled.div`\n  marginTop: '5em' \n  marginLeft: '50px' \n  padding: 1em;\n  lineHeight: '1.6'\n  \n`\nconst Title = styled.h1`\n  font-family: Nunito Sans;\n  font-size: 16px;\n  font-weight: 800;\n  color: ${({ theme }) => theme.text};\n`\nconst Paragraph = styled.div`\n  font-family: Nunito Sans;\n  font-size: 14px;\n  font-weight: 300;\n`\nconst Button = styled.button`\n  font-family: Nunito Sans;\n  color: ${({ theme }) => theme.text};\n  background: ${({ theme }) => theme.background};\n  font-weight: 300;\n  font-size: 14px;\n  border: none;\n  border-radius: 6px;\n  width: 8.5em;\n  padding: 0.5em;\n  margin-top: 10px;\n`\n\nconst Country = ({ countriesToShow, setChosenCountry }) => {\n  const history = useHistory()\n  return (\n    <Container>\n      <Row>\n        <Col md={4}>\n          <Button\n            onClick={() => {\n              setChosenCountry('')\n              history.push('/')\n            }}\n          >\n            <FontAwesomeIcon icon={faArrowLeft} /> Back\n          </Button>\n        </Col>\n      </Row>\n      <Row md={3} xs={1}>\n        <Col>\n          <Image src={countriesToShow[0].flag} alt=\"flag\" fluid style={{ marginTop: '50px' }} />\n        </Col>\n        <Col>\n          <Main>\n            <Title>{countriesToShow[0].name}</Title>\n            <div>\n              <Paragraph>Native Name: {countriesToShow[0].nativeName}</Paragraph>\n\n              <Paragraph>Population: {countriesToShow[0].population}</Paragraph>\n\n              <Paragraph>Region: {countriesToShow[0].region}</Paragraph>\n\n              <Paragraph>Sub Region: {countriesToShow[0].subregion}</Paragraph>\n\n              <Paragraph>Capital: {countriesToShow[0].capital}</Paragraph>\n              {'\\n'}\n            </div>\n          </Main>\n        </Col>\n        <Col>\n          <div>\n            <Main>\n              <Paragraph>\n                Top Level Domain:\n                {countriesToShow[0].topLevelDomain}\n              </Paragraph>\n              <Paragraph>\n                Currencies: {countriesToShow[0].currencies.map((currency) => currency.name)}\n              </Paragraph>\n              <Paragraph>\n                Languages:{' '}\n                {countriesToShow[0].languages\n                  .map(function (lan) {\n                    return lan.name\n                  })\n                  .join(',')}\n              </Paragraph>\n            </Main>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Country\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMoon } from '@fortawesome/free-solid-svg-icons'\nimport styled from 'styled-components'\n\nconst Main = styled.div`\n  padding: 1em;\n  background: ${({ theme }) => theme.background};\n`\nconst Title = styled.h1`\n  font-family: Nunito Sans;\n  font-size: 16px;\n  font-weight: 800;\n  color: ${({ theme }) => theme.text};\n`\n\nconst Button = styled.button`\n  font-family: Nunito Sans;\n  color: ${({ theme }) => theme.text};\n  background: ${({ theme }) => theme.background};\n  font-weight: 600;\n  font-size: 14px;\n  border: none;\n`\nconst Titles = ({ toggleTheme }) => {\n  return (\n    <Container>\n      <Main>\n        <Row>\n          <Col>\n            <Title>Where in the world?</Title>\n          </Col>\n          <Col>\n            <Button className=\"float-right\" onClick={toggleTheme}>\n              <FontAwesomeIcon icon={faMoon} /> Dark Mode\n            </Button>\n          </Col>\n        </Row>\n      </Main>\n    </Container>\n  )\n}\n\nexport default Titles\n","export const lightTheme = {\n  backgroundColor: 'hsl(0, 0%, 98%)',\n  text: 'hsl(200, 15%, 8%)',\n  background: ' hsl(0, 0%, 100%)',\n  inputBackgroundColor: 'hsl(0, 0%, 52%)',\n}\n\nexport const darkTheme = {\n  backgroundColor: 'hsl(207, 26%, 17%)',\n  text: 'hsl(0, 0%, 100%)',\n  background: 'hsl(209, 23%, 22%)',\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyles = createGlobalStyle`\n\n  body {\n    \n    background: ${({ theme }) => theme.backgroundColor};\n    color: ${({ theme }) => theme.text};\n    \n  }\n  `\n","import React, { useState, useEffect } from 'react'\nimport Axios from 'axios'\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport FilterRegion from './components/FilterRegion'\nimport Filter from './components/Filter'\nimport CountryList from './components/CountryList'\nimport Country from './components/Country'\nimport Titles from './components/Title'\nimport { useDarkMode } from './useDarkMode'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { ThemeProvider } from 'styled-components'\nimport { lightTheme, darkTheme } from './theme'\nimport { GlobalStyles } from './global'\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [chosenCountry, setChosenCountry] = useState('')\n  const [chosenRegion, setChosenRegion] = useState('')\n  const [theme, toggleTheme] = useDarkMode()\n\n  useEffect(() => {\n    Axios.get('https://restcountries.eu/rest/v2/all').then((response) => {\n      setCountries(response.data)\n    })\n  }, [])\n  console.log('render', countries.length, 'countries')\n\n  const handleFilterChange = (event) => {\n    setChosenCountry(event.target.value)\n  }\n\n  const regionOfCountries = countries.filter((country) =>\n    country.region.toLowerCase().includes(chosenRegion.toLowerCase()),\n  )\n\n  const countriesToShow = regionOfCountries.filter((country) =>\n    country.name.toLowerCase().includes(chosenCountry.toLowerCase()),\n  )\n\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Container>\n          <Titles toggleTheme={toggleTheme} />\n          <Switch>\n            <Route path=\"/country\">\n              <Row>\n                <Col>\n                  <Country countriesToShow={countriesToShow} setChosenCountry={setChosenCountry} />\n                </Col>\n              </Row>\n            </Route>\n            <Route path=\"/\">\n              <Row>\n                <Col sm={{ size: 'auto' }}>\n                  <Filter chosenCountry={chosenCountry} handleFilterChange={handleFilterChange} />\n                </Col>\n                <Col sm={{ size: 'auto' }}>\n                  <FilterRegion chosenRegion={chosenRegion} setChosenRegion={setChosenRegion} />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={{ size: 'auto' }}>\n                  <CountryList\n                    countriesToShow={countriesToShow}\n                    setChosenCountry={setChosenCountry}\n                  />\n                </Col>\n              </Row>\n            </Route>\n          </Switch>\n        </Container>\n      </Router>\n      <GlobalStyles />\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import { useEffect, useState } from 'react'\n\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState('light')\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      window.localStorage.setItem('theme', 'dark')\n      setTheme('dark')\n    } else {\n      window.localStorage.setItem('theme', 'light')\n      setTheme('light')\n    }\n  }\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme')\n    localTheme && setTheme(localTheme)\n  }, [])\n\n  return [theme, toggleTheme]\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\n\nimport './myStyle.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}