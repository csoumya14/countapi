{"version":3,"sources":["components/FilterRegion.js","components/Filter.js","components/CountryList.js","components/Country.js","theme.js","global.js","App.js","useDarkMode.js","index.js"],"names":["options","value","label","customStyles","container","provided","state","marginTop","className","border","isFocused","transition","boxShadow","option","backgroundColor","color","control","base","background","valueContainer","FilterRegion","chosenRegion","handleRegionChange","style","maxWidth","marginLeft","marginRight","placeholder","styles","onChange","filter","obj","Filter","chosenCountry","handleFilterChange","id","CountryList","countriesToShow","setChosenCountry","length","countriesToDisplay","slice","Container","Row","xs","md","map","country","Col","key","name","Card","width","height","marginBottom","Img","variant","src","flag","Body","Title","fontSize","Text","population","region","capital","to","Button","onClick","size","fluid","lineHeight","span","offset","Country","Image","alt","nativeName","subregion","topLevelDomain","currencies","currency","languages","lan","join","lightTheme","text","darkTheme","GlobalStyles","createGlobalStyle","theme","rowFirstStyle","App","useState","countries","setCountries","setChosenRegion","setTheme","useEffect","localTheme","window","localStorage","getItem","setItem","useDarkMode","toggleTheme","Axios","get","then","response","data","console","log","toLowerCase","includes","basename","process","fontWeight","icon","faMoon","path","sm","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2f504f4.chunk.js","sourcesContent":["import React from 'react'\nimport Select from 'react-select'\n\nconst options = [\n  { value: 'Asia', label: 'Asia' },\n  { value: 'Europe', label: 'Europe' },\n  { value: 'America', label: 'America' },\n  { value: 'Oceania', label: 'Oceania' },\n  { value: 'Africa', label: 'Africa' },\n]\n\nconst customStyles = {\n  container: (provided, state) => ({\n    marginTop: '12px',\n    ...provided,\n    className: 'float-md-right',\n    border: state.isFocused ? null : null,\n    transition: 'border-color 0.2s ease, box-shadow 0.2s ease, padding 0.2s ease',\n    '&:hover': {\n      boxShadow: '0 2px 4px 0 rgba(41, 56, 78, 0.1)',\n    },\n  }),\n  option: (provided, state) => ({\n    ...provided,\n    className: 'float-right',\n    backgroundColor: 'hsl(209, 23%, 22%)',\n    color: 'white',\n  }),\n  control: (base, state) => ({\n    ...base,\n    className: 'float-md-right',\n    background: 'hsl(209, 23%, 22%)',\n  }),\n  valueContainer: (base, state) => ({\n    ...base,\n    className: 'float-right',\n    background: 'hsl(209, 23%, 22%)',\n  }),\n}\n\nconst FilterRegion = ({ chosenRegion, handleRegionChange }) => {\n  return (\n    <div style={{ maxWidth: '40% ', marginLeft: '210px', marginRight: '0px' }}>\n      <Select\n        placeholder=\"Filter by Region\"\n        styles={customStyles}\n        options={options}\n        onChange={handleRegionChange}\n        value={options.filter((obj) => obj.value === chosenRegion)}\n      />\n    </div>\n  )\n}\n\nexport default FilterRegion\n","import React from 'react'\n\nconst Filter = ({ chosenCountry, handleFilterChange }) => {\n  return (\n    <div className=\"filter\">\n      <input\n        id=\"search\"\n        value={chosenCountry}\n        onChange={handleFilterChange}\n        placeholder=\"Search for a country\"\n      />\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nimport { Card } from 'react-bootstrap'\nimport { Button } from 'react-bootstrap'\nimport { BrowserRouter as Link } from 'react-router-dom'\nimport { Container, Row, Col } from 'react-bootstrap'\nconst CountryList = ({ countriesToShow, setChosenCountry }) => {\n  switch (true) {\n    case countriesToShow.length > 10: {\n      const countriesToDisplay = countriesToShow.slice(0, 8)\n      return (\n        <div className=\"grid-container\">\n          <Container>\n            <Row xs=\"1\" md=\"4\">\n              {countriesToDisplay.map((country) => {\n                return (\n                  <Col key={country.name}>\n                    <Card\n                      style={{\n                        width: '12rem',\n                        height: '20rem',\n                        marginBottom: '50px',\n                        marginRight: '10px',\n                      }}\n                    >\n                      <Card.Img variant=\"top\" src={country.flag} style={{ height: '10rem' }} />\n                      <Card.Body>\n                        <Card.Title\n                          style={{\n                            fontSize: '18px',\n                            width: '100%',\n                            color: 'hsl(200, 15%, 8%)',\n                          }}\n                        >\n                          {country.name}\n                        </Card.Title>\n                        <Card.Text\n                          style={{\n                            fontSize: '10px',\n                            width: '80%',\n                            color: 'hsl(200, 15%, 8%)',\n                          }}\n                        >\n                          Population:{country.population}\n                          {'\\n'}\n                          Region:{country.region}\n                          {'\\n'}\n                          Capital:{country.capital}\n                          {'\\n'}\n                        </Card.Text>\n                        <Link to=\"/country\">\n                          <Button\n                            onClick={() => {\n                              setChosenCountry(country.name)\n                            }}\n                            variant=\"secondary\"\n                            size=\"sm\"\n                          >\n                            show\n                          </Button>\n                        </Link>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                )\n              })}\n            </Row>\n          </Container>\n        </div>\n      )\n    }\n    case countriesToShow.length > 1 && countriesToShow.length < 10: {\n      return (\n        <div className=\"grid-container\">\n          <Container fluid style={{ lineHeight: '32px' }}>\n            <Row xs=\"1\" md=\"4\">\n              {countriesToShow.map((country) => {\n                return (\n                  <Col key={country.name}>\n                    <Card style={{ width: '15rem', marginBottom: '50px' }}>\n                      <Card.Img variant=\"top\" src={country.flag} style={{ height: '10rem' }} />\n                      <Card.Body>\n                        <Card.Title>{country.name}</Card.Title>\n                        <Card.Text>\n                          <div>Population:{country.population}</div>\n                          <div>Region:{country.region}</div>\n                          <div>Capital:{country.capital}</div>\n                        </Card.Text>\n                        <Link to=\"/country\">\n                          <Button\n                            onClick={() => {\n                              setChosenCountry(country.name)\n                            }}\n                          >\n                            show\n                          </Button>\n                        </Link>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                )\n              })}\n            </Row>\n          </Container>\n        </div>\n      )\n    }\n\n    case countriesToShow.length === 1: {\n      return (\n        <div className=\"grid-container\">\n          <Container>\n            <Row md=\"1\">\n              <Col md={{ span: 3, offset: 5 }} key={countriesToShow[0].name}>\n                <Card style={{ width: '15rem', marginBottom: '50px' }}>\n                  <Card.Img\n                    variant=\"top\"\n                    src={countriesToShow[0].flag}\n                    style={{ height: '10rem' }}\n                  />\n                  <Card.Body>\n                    <Card.Title>{countriesToShow[0].name}</Card.Title>\n                    <Card.Text>\n                      <div>Population:{countriesToShow[0].population}</div>\n                      <div>Region:{countriesToShow[0].region}</div>\n                      <div>Capital:{countriesToShow[0].capital}</div>\n                    </Card.Text>\n                    <Link to=\"/country\">\n                      <Button\n                        onClick={() => {\n                          setChosenCountry(countriesToShow[0].name)\n                        }}\n                      >\n                        show\n                      </Button>\n                    </Link>\n                  </Card.Body>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      )\n    }\n    default:\n      return null\n  }\n}\n\nexport default CountryList\n","import React from 'react'\nimport { BrowserRouter as Link } from 'react-router-dom'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Image } from 'react-bootstrap'\n\nconst Country = ({ countriesToShow, setChosenCountry }) => {\n  return (\n    <Container>\n      <Row>\n        <Col md={4}>\n          <Link to=\"/\">\n            <button\n              onClick={() => {\n                setChosenCountry('')\n              }}\n            >\n              Back\n            </button>\n          </Link>\n        </Col>\n      </Row>\n      <Row md={3} xs={1}>\n        <Col>\n          <Image src={countriesToShow[0].flag} alt=\"flag\" fluid style={{ marginTop: '50px' }} />\n        </Col>\n        <Col>\n          <div style={{ marginTop: '80px', marginLeft: '50px' }}>\n            <h2>{countriesToShow[0].name}</h2>\n            <div style={{ fontSize: '11px', lineHeight: '1.6' }}>\n              <div>Native Name: {countriesToShow[0].nativeName}</div>\n\n              <div>Population: {countriesToShow[0].population}</div>\n\n              <div>Region: {countriesToShow[0].region}</div>\n\n              <div>Sub Region: {countriesToShow[0].subregion}</div>\n\n              <div>Capital: {countriesToShow[0].capital}</div>\n              {'\\n'}\n            </div>\n          </div>\n        </Col>\n        <Col>\n          <div style={{ marginTop: '125px' }}>\n            <div style={{ fontSize: '11px', lineHeight: '1.6' }}>\n              <div>Top Level Domain:{countriesToShow[0].topLevelDomain}</div>\n              <div>\n                Currencies: {countriesToShow[0].currencies.map((currency) => currency.name)}\n              </div>\n              <div>\n                Languages:{' '}\n                {countriesToShow[0].languages\n                  .map(function (lan) {\n                    return lan.name\n                  })\n                  .join(',')}\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Country\n","export const lightTheme = {\n  backgroundColor: 'hsl(0, 0%, 98%)',\n  text: 'hsl(200, 15%, 8%)',\n}\n\nexport const darkTheme = {\n  backgroundColor: 'hsl(207, 26%, 17%)',\n  text: 'hsl(0, 0%, 100%)',\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyles = createGlobalStyle`\n\n  body {\n    \n    background: ${({ theme }) => theme.backgroundColor};\n    color: ${({ theme }) => theme.text};\n    \n  }\n  `\n","import React, { useState, useEffect } from 'react'\nimport Axios from 'axios'\nimport { BrowserRouter as Router, Switch, Route, useHistory } from 'react-router-dom'\nimport FilterRegion from './components/FilterRegion'\nimport Filter from './components/Filter'\nimport CountryList from './components/CountryList'\nimport Country from './components/Country'\nimport { useDarkMode } from './useDarkMode'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Button } from 'react-bootstrap'\nimport { ThemeProvider } from 'styled-components'\nimport { lightTheme, darkTheme } from './theme'\nimport { GlobalStyles } from './global'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMoon } from '@fortawesome/free-solid-svg-icons'\n\nconst rowFirstStyle = {\n  backgroundColor: 'hsl(209, 23%, 22%)',\n  color: 'hsl(0, 0%, 100%)',\n}\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [chosenCountry, setChosenCountry] = useState('')\n  const [chosenRegion, setChosenRegion] = useState('')\n  const [theme, toggleTheme] = useDarkMode()\n\n  useEffect(() => {\n    Axios.get('https://restcountries.eu/rest/v2/all').then((response) => {\n      setCountries(response.data)\n    })\n  }, [])\n  console.log('render', countries.length, 'countries')\n\n  const handleFilterChange = (event) => {\n    setChosenCountry(event.target.value)\n  }\n\n  const handleRegionChange = (event) => {\n    setChosenRegion(event.value)\n  }\n\n  const regionOfCountries = countries.filter((country) =>\n    country.region.toLowerCase().includes(chosenRegion.toLowerCase()),\n  )\n\n  const countriesToShow = regionOfCountries.filter((country) =>\n    country.name.toLowerCase().includes(chosenCountry.toLowerCase()),\n  )\n\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Container>\n          <Row style={rowFirstStyle}>\n            <Col>\n              <h1 style={{ fontWeight: '800', fontSize: '16px', marginTop: '20px' }}>\n                Where in the world?\n              </h1>\n            </Col>\n            <Col>\n              <Button\n                className=\"float-right\"\n                style={{\n                  background: 'hsl(209, 23%, 22%)',\n                  border: 'none',\n                }}\n                onClick={toggleTheme}\n              >\n                <FontAwesomeIcon icon={faMoon} />\n                Dark Mode\n              </Button>\n            </Col>\n          </Row>\n          <div>\n            <Switch>\n              <Route path=\"/country\">\n                <Row>\n                  <Col>\n                    <Country\n                      countriesToShow={countriesToShow}\n                      setChosenCountry={setChosenCountry}\n                    />\n                  </Col>\n                </Row>\n              </Route>\n              <Route path=\"/\">\n                <Row>\n                  <Col sm={{ size: 'auto' }}>\n                    <Filter chosenCountry={chosenCountry} handleFilterChange={handleFilterChange} />\n                  </Col>\n                  <Col sm={{ size: 'auto' }}>\n                    <FilterRegion\n                      handleRegionChange={handleRegionChange}\n                      chosenRegion={chosenRegion}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col sm={{ size: 'auto' }}>\n                    <CountryList\n                      countriesToShow={countriesToShow}\n                      setChosenCountry={setChosenCountry}\n                    />\n                  </Col>\n                </Row>\n              </Route>\n            </Switch>\n          </div>\n        </Container>\n      </Router>\n      <GlobalStyles />\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import { useEffect, useState } from 'react'\n\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState('light')\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      window.localStorage.setItem('theme', 'dark')\n      setTheme('dark')\n    } else {\n      window.localStorage.setItem('theme', 'light')\n      setTheme('light')\n    }\n  }\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme')\n    localTheme && setTheme(localTheme)\n  }, [])\n\n  return [theme, toggleTheme]\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\n\nimport './myStyle.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}