{"version":3,"sources":["components/FilterRegion.js","components/Filter.js","components/Country.js","components/CountryList.js","theme.js","global.js","App.js","useDarkMode.js","index.js"],"names":["options","value","label","customStyles","container","provided","state","marginTop","className","border","isFocused","transition","boxShadow","option","backgroundColor","color","control","base","background","valueContainer","FilterRegion","chosenRegion","handleRegionChange","style","maxWidth","marginLeft","marginRight","placeholder","styles","onChange","filter","obj","Filter","chosenCountry","handleFilterChange","id","Country","countriesToShow","setChosenCountry","Container","Row","Col","md","to","onClick","xs","Image","src","flag","alt","fluid","name","fontSize","lineHeight","nativeName","population","region","subregion","capital","topLevelDomain","currencies","map","currency","languages","lan","join","CountryList","length","slice","country","key","Card","width","marginBottom","Img","variant","height","Body","Title","Text","Button","span","offset","lightTheme","text","darkTheme","GlobalStyles","createGlobalStyle","theme","rowFirstStyle","App","styled","div","useState","countries","setCountries","setChosenRegion","setTheme","useEffect","localTheme","window","localStorage","getItem","setItem","useDarkMode","toggleTheme","useHistory","Axios","get","then","response","data","console","log","toLowerCase","includes","fontWeight","icon","faMoon","path","sm","size","event","target","library","add","faCoffee","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dee68b3a.chunk.js","sourcesContent":["import React from 'react'\nimport Select from 'react-select'\n\nconst options = [\n  { value: 'Asia', label: 'Asia' },\n  { value: 'Europe', label: 'Europe' },\n  { value: 'America', label: 'America' },\n  { value: 'Oceania', label: 'Oceania' },\n  { value: 'Africa', label: 'Africa' },\n]\n\nconst customStyles = {\n  container: (provided, state) => ({\n    marginTop: '12px',\n    ...provided,\n    className: 'float-md-right',\n    border: state.isFocused ? null : null,\n    transition: 'border-color 0.2s ease, box-shadow 0.2s ease, padding 0.2s ease',\n    '&:hover': {\n      boxShadow: '0 2px 4px 0 rgba(41, 56, 78, 0.1)',\n    },\n  }),\n  option: (provided, state) => ({\n    ...provided,\n    className: 'float-right',\n    backgroundColor: 'hsl(209, 23%, 22%)',\n    color: 'white',\n  }),\n  control: (base, state) => ({\n    ...base,\n    className: 'float-md-right',\n    background: 'hsl(209, 23%, 22%)',\n  }),\n  valueContainer: (base, state) => ({\n    ...base,\n    className: 'float-right',\n    background: 'hsl(209, 23%, 22%)',\n  }),\n}\n\nconst FilterRegion = ({ chosenRegion, handleRegionChange }) => {\n  return (\n    <div style={{ maxWidth: '40% ', marginLeft: '210px', marginRight: '0px' }}>\n      <Select\n        placeholder=\"Filter by Region\"\n        styles={customStyles}\n        options={options}\n        onChange={handleRegionChange}\n        value={options.filter((obj) => obj.value === chosenRegion)}\n      />\n    </div>\n  )\n}\n/*\nconst FilterRegion = ({ chosenRegion, handleRegionChange, handleSubmit, defaultOption }) => {\n  return (\n    <div className=\"regionFilter\">\n      <form onSubmit={handleSubmit}>\n        <label className=\"dropdown\">\n          <select value={chosenRegion} onChange={handleRegionChange}>\n            <option id=\"dropdownContent\" value=\" \">\n              {defaultOption}\n            </option>\n            <option value=\"Asia\">Asia</option>\n            <option value=\"Europe\">Europe</option>\n            <option value=\"America\">America</option>\n            <option value=\"Oceania\">Oceania</option>\n            <option value=\"Africa\">Africa</option>\n          </select>\n        </label>\n      </form>\n    </div>\n  )\n}\n*/\n\nexport default FilterRegion\n","import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { BrowserRouter as Link } from 'react-router-dom'\n\nconst Filter = ({ chosenCountry, handleFilterChange }) => {\n  return (\n    <div className=\"filter\">\n      <input\n        id=\"search\"\n        value={chosenCountry}\n        onChange={handleFilterChange}\n        placeholder=\"Search for a country\"\n      />\n    </div>\n  )\n}\n\nexport default Filter\n/*\n\n      */\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Image } from 'react-bootstrap'\n\nconst Country = ({ countriesToShow, setChosenCountry }) => {\n  return (\n    <Container>\n      <Row>\n        <Col md={4}>\n          <Link to=\"/\">\n            <button\n              onClick={() => {\n                setChosenCountry('')\n              }}\n            >\n              Back\n            </button>\n          </Link>\n        </Col>\n      </Row>\n      <Row md={3} xs={1}>\n        <Col>\n          <Image src={countriesToShow[0].flag} alt=\"flag\" fluid style={{ marginTop: '50px' }} />\n        </Col>\n        <Col>\n          <div style={{ marginTop: '80px', marginLeft: '50px' }}>\n            <h2>{countriesToShow[0].name}</h2>\n            <div style={{ fontSize: '11px', lineHeight: '1.6' }}>\n              <div>Native Name: {countriesToShow[0].nativeName}</div>\n\n              <div>Population: {countriesToShow[0].population}</div>\n\n              <div>Region: {countriesToShow[0].region}</div>\n\n              <div>Sub Region: {countriesToShow[0].subregion}</div>\n\n              <div>Capital: {countriesToShow[0].capital}</div>\n              {'\\n'}\n            </div>\n          </div>\n        </Col>\n        <Col>\n          <div style={{ marginTop: '125px' }}>\n            <div style={{ fontSize: '11px', lineHeight: '1.6' }}>\n              <div>Top Level Domain:{countriesToShow[0].topLevelDomain}</div>\n              <div>\n                Currencies: {countriesToShow[0].currencies.map((currency) => currency.name)}\n              </div>\n              <div>\n                Languages:{' '}\n                {countriesToShow[0].languages\n                  .map(function (lan) {\n                    return lan.name\n                  })\n                  .join(',')}\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Country\n/*\n<h2>languages</h2>\n        <ul>\n          {countriesToShow[0].languages.map((lan) => {\n            return <li key={lan.name}>{lan.name}</li>\n          })}\n        </ul>\n        */\n","import React from 'react'\nimport Country from './Country'\nimport { Card } from 'react-bootstrap'\nimport { Button } from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport { Container, Row, Col } from 'react-bootstrap'\nconst CountryList = ({ countriesToShow, setChosenCountry }) => {\n  switch (true) {\n    case countriesToShow.length > 10: {\n      const countriesToDisplay = countriesToShow.slice(0, 8)\n      return (\n        //<p>Please add a name</p>\n        <div className=\"grid-container\">\n          <Container>\n            <Row xs=\"1\" md=\"4\">\n              {countriesToDisplay.map((country) => {\n                return (\n                  <Col key={country.name}>\n                    <Card\n                      style={{\n                        width: '12rem',\n                        height: '20rem',\n                        marginBottom: '50px',\n                        marginRight: '10px',\n                      }}\n                    >\n                      <Card.Img variant=\"top\" src={country.flag} style={{ height: '10rem' }} />\n                      <Card.Body>\n                        <Card.Title\n                          style={{\n                            fontSize: '18px',\n                            width: '100%',\n                            color: 'hsl(200, 15%, 8%)',\n                          }}\n                        >\n                          {country.name}\n                        </Card.Title>\n                        <Card.Text\n                          style={{\n                            fontSize: '10px',\n                            width: '80%',\n                            color: 'hsl(200, 15%, 8%)',\n                          }}\n                        >\n                          Population:{country.population}\n                          {'\\n'}\n                          Region:{country.region}\n                          {'\\n'}\n                          Capital:{country.capital}\n                          {'\\n'}\n                        </Card.Text>\n                        <Link to=\"/country\">\n                          <Button\n                            onClick={() => {\n                              setChosenCountry(country.name)\n                            }}\n                            variant=\"secondary\"\n                            size=\"sm\"\n                          >\n                            show\n                          </Button>\n                        </Link>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                )\n              })}\n            </Row>\n          </Container>\n        </div>\n      )\n    }\n    case countriesToShow.length > 1 && countriesToShow.length < 10: {\n      return (\n        <div className=\"grid-container\">\n          <Container fluid style={{ lineHeight: '32px' }}>\n            <Row xs=\"1\" md=\"4\">\n              {countriesToShow.map((country) => {\n                return (\n                  <Col key={country.name}>\n                    <Card style={{ width: '15rem', marginBottom: '50px' }}>\n                      <Card.Img variant=\"top\" src={country.flag} style={{ height: '10rem' }} />\n                      <Card.Body>\n                        <Card.Title>{country.name}</Card.Title>\n                        <Card.Text>\n                          <div>Population:{country.population}</div>\n                          <div>Region:{country.region}</div>\n                          <div>Capital:{country.capital}</div>\n                        </Card.Text>\n                        <Link to=\"/country\">\n                          <Button\n                            onClick={() => {\n                              setChosenCountry(country.name)\n                            }}\n                          >\n                            show\n                          </Button>\n                        </Link>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                )\n              })}\n            </Row>\n          </Container>\n        </div>\n      )\n    }\n\n    case countriesToShow.length === 1: {\n      return (\n        <div className=\"grid-container\">\n          <Container>\n            <Row md=\"1\">\n              <Col md={{ span: 3, offset: 5 }} key={countriesToShow[0].name}>\n                <Card style={{ width: '15rem', marginBottom: '50px' }}>\n                  <Card.Img\n                    variant=\"top\"\n                    src={countriesToShow[0].flag}\n                    style={{ height: '10rem' }}\n                  />\n                  <Card.Body>\n                    <Card.Title>{countriesToShow[0].name}</Card.Title>\n                    <Card.Text>\n                      <div>Population:{countriesToShow[0].population}</div>\n                      <div>Region:{countriesToShow[0].region}</div>\n                      <div>Capital:{countriesToShow[0].capital}</div>\n                    </Card.Text>\n                    <Link to=\"/country\">\n                      <Button\n                        onClick={() => {\n                          setChosenCountry(countriesToShow[0].name)\n                        }}\n                      >\n                        show\n                      </Button>\n                    </Link>\n                  </Card.Body>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      )\n    }\n    default:\n      return null\n  }\n}\n\nexport default CountryList\n/*\n        <div className=\"grid-item\">\n          <h2>{countriesToShow[0].name}</h2>\n          <Link to=\"/country\">\n            <button\n              onClick={() => {\n                setChosenCountry(countriesToShow[0].name)\n              }}\n            >\n              show\n            </button>\n          </Link>\n        </div>\n        //<Route path=\"/country\">\n        //<Country countriesToShow={countriesToShow} />\n        // </Route>\n        /*\n        <div>\n          <h2>{countriesToShow[0].name}</h2>\n          <p>capital {countriesToShow[0].capital}</p>\n          <p>population {countriesToShow[0].population}</p>\n          <h2>languages</h2>\n          <ul>\n            {countriesToShow[0].languages.map((lan) => {\n              return <li key={lan.name}>{lan.name}</li>\n            })}\n          </ul>\n          <img src={countriesToShow[0].flag} width=\"150px\" alt=\"flag\" />\n        </div>\n\n        <div key={country.name} className=\"grid-item\">\n                        <span>{country.name}</span>{' '}\n                        <Link to=\"/country\">\n                          <button\n                            onClick={() => {\n                              setChosenCountry(country.name)\n                            }}\n                          >\n                            show\n                          </button>\n                        </Link>\n                      </div>\n        */\n","export const lightTheme = {\n  backgroundColor: 'hsl(0, 0%, 98%)',\n  text: 'hsl(200, 15%, 8%)',\n}\n\nexport const darkTheme = {\n  backgroundColor: 'hsl(207, 26%, 17%)',\n  text: 'hsl(0, 0%, 100%)',\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyles = createGlobalStyle`\n\n  body {\n    \n    background: ${({ theme }) => theme.backgroundColor};\n    color: ${({ theme }) => theme.text};\n    \n  }\n  `\n","import React, { useState, useEffect } from 'react'\nimport Axios from 'axios'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useHistory,\n} from 'react-router-dom'\nimport FilterRegion from './components/FilterRegion'\nimport Filter from './components/Filter'\nimport CountryList from './components/CountryList'\nimport Country from './components/Country'\nimport { useDarkMode } from './useDarkMode'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Button } from 'react-bootstrap'\nimport styled, { ThemeProvider } from 'styled-components'\nimport { lightTheme, darkTheme } from './theme'\nimport { GlobalStyles } from './global'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMoon } from '@fortawesome/free-solid-svg-icons'\n\nconst rowFirstStyle = {\n  backgroundColor: 'hsl(209, 23%, 22%)',\n  color: 'hsl(0, 0%, 100%)',\n}\n\nconst Containers = styled.div`\n  min-height: 100%;\n`\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [chosenCountry, setChosenCountry] = useState('')\n  const [chosenRegion, setChosenRegion] = useState('')\n  const [theme, toggleTheme] = useDarkMode()\n  const history = useHistory()\n  useEffect(() => {\n    Axios.get('https://restcountries.eu/rest/v2/all').then((response) => {\n      setCountries(response.data)\n    })\n  }, [])\n  console.log('render', countries.length, 'countries')\n\n  const handleFilterChange = (event) => {\n    setChosenCountry(event.target.value)\n  }\n\n  const handleRegionChange = (event) => {\n    setChosenRegion(event.value)\n  }\n\n  const regionOfCountries = countries.filter((country) =>\n    country.region.toLowerCase().includes(chosenRegion.toLowerCase()),\n  )\n\n  const countriesToShow = regionOfCountries.filter((country) =>\n    country.name.toLowerCase().includes(chosenCountry.toLowerCase()),\n  )\n\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <Router>\n        <Container>\n          <Row style={rowFirstStyle}>\n            <Col>\n              <h1 style={{ fontWeight: '800', fontSize: '16px', marginTop: '20px' }}>\n                Where in the world?\n              </h1>\n            </Col>\n            <Col>\n              <Button\n                className=\"float-right\"\n                style={{\n                  background: 'hsl(209, 23%, 22%)',\n                  border: 'none',\n                }}\n                onClick={toggleTheme}\n              >\n                <FontAwesomeIcon icon={faMoon} />\n                Dark Mode\n              </Button>\n            </Col>\n          </Row>\n          <div>\n            <Switch>\n              <Route path=\"/country\">\n                <Row>\n                  <Col>\n                    <Country\n                      countriesToShow={countriesToShow}\n                      setChosenCountry={setChosenCountry}\n                    />\n                  </Col>\n                </Row>\n              </Route>\n              <Route path=\"/\">\n                <Row>\n                  <Col sm={{ size: 'auto' }}>\n                    <Filter chosenCountry={chosenCountry} handleFilterChange={handleFilterChange} />\n                  </Col>\n                  <Col sm={{ size: 'auto' }}>\n                    <FilterRegion\n                      handleRegionChange={handleRegionChange}\n                      chosenRegion={chosenRegion}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col sm={{ size: 'auto' }}>\n                    <CountryList\n                      countriesToShow={countriesToShow}\n                      setChosenCountry={setChosenCountry}\n                    />\n                  </Col>\n                </Row>\n              </Route>\n            </Switch>\n          </div>\n        </Container>\n      </Router>\n      <GlobalStyles />\n    </ThemeProvider>\n  )\n}\n\nexport default App\n//defaultOption=\"Filter by Region\"\n","import { useEffect, useState } from 'react'\n\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState('light')\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      window.localStorage.setItem('theme', 'dark')\n      setTheme('dark')\n    } else {\n      window.localStorage.setItem('theme', 'light')\n      setTheme('light')\n    }\n  }\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme')\n    localTheme && setTheme(localTheme)\n  }, [])\n\n  return [theme, toggleTheme]\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\nimport './myStyle.css'\nimport App from './App'\nlibrary.add(faCoffee)\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}