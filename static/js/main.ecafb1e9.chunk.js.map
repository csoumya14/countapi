{"version":3,"sources":["components/FilterRegion.js","components/Filter.js","components/CountryList.js","components/Country.js","theme.js","global.js","App.js","useDarkMode.js","index.js"],"names":["Main","styled","div","DropDownContainer","DropDownHeader","theme","text","background","DropDownListContainer","DropDownList","ul","ListItem","li","Options","FilterRegion","setChosenRegion","chosenRegion","useState","isOpen","setIsOpen","onClick","map","option","value","key","Math","random","Input","input","Filter","chosenCountry","handleFilterChange","onChange","placeholder","CardStyle","width","marginBottom","marginRight","CardTextStyle","fontSize","color","lineHeight","CardTitleStyle","marginTop","paddingTop","height","fontWeight","ButtonStyle","padding","CountryList","countriesToShow","setChosenCountry","history","handleClick","useHistory","length","countriesToDisplay","slice","className","Container","Row","xs","md","country","Col","name","Card","style","Img","variant","src","flag","Body","Title","Text","population","region","capital","Button","push","size","fluid","span","offset","Country","Image","alt","marginLeft","nativeName","subregion","topLevelDomain","currencies","currency","languages","lan","join","lightTheme","backgroundColor","darkTheme","GlobalStyles","createGlobalStyle","rowFirstStyle","App","countries","setCountries","setTheme","useEffect","localTheme","window","localStorage","getItem","setItem","useDarkMode","toggleTheme","Axios","get","then","response","data","console","log","filter","toLowerCase","includes","basename","process","border","icon","faMoon","path","sm","event","target","ReactDOM","render","document","getElementById"],"mappings":"65CAIA,IAAMA,EAAOC,IAAOC,IAAV,KAUJC,EAAoBF,IAAOC,IAAV,KAKjBE,EAAiBH,IAAOC,IAAV,KAaT,qBAAGG,MAAkBC,QAChB,qBAAGD,MAAkBE,cAE/BC,EAAwBP,IAAOC,IAAV,KACrBO,EAAeR,IAAOS,GAAV,KAIF,qBAAGL,MAAkBE,cAI1B,qBAAGF,MAAkBC,QAO1BK,EAAWV,IAAOW,GAAV,KAIRC,EAAU,CAAC,OAAQ,SAAU,UAAW,UAAW,UAmC1CC,EAlCM,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,gBAAiBC,EAAmB,EAAnBA,aAAmB,EAC9BC,oBAAS,GADqB,mBACnDC,EADmD,KAC3CC,EAD2C,KAQ1D,OACE,kBAACnB,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,CACEgB,QAAS,WACPD,GAAWD,KAGZF,GAAgB,qBAGpBE,GACC,kBAACV,EAAD,KACE,kBAACC,EAAD,KACGI,EAAQQ,KAAI,SAACC,GAAD,OACX,kBAACX,EAAD,CAAUS,SApBGG,EAoBsBD,EApBZ,WACjCP,EAAgBQ,GAChBJ,GAAU,KAkB4CK,IAAKC,KAAKC,UACnDJ,GArBS,IAACC,S,gVCzD3B,IAAMI,EAAQ1B,IAAO2B,MAAV,KAKK,qBAAGvB,MAAkBE,cAC1B,qBAAGF,MAAkBC,QAoBjBuB,EAZA,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,mBAC/B,OACE,6BACE,kBAACJ,EAAD,CACEJ,MAAOO,EACPE,SAAUD,EACVE,YAAY,2B,wCCddC,EAAY,CAChBC,MAAO,QACPC,aAAc,OACdC,YAAa,OACb9B,WAAY,sBAGR+B,EAAgB,CACpBC,SAAU,OACVJ,MAAO,OACPK,MAAO,oBACPC,WAAY,OAGRC,EAAiB,CACrBC,UAAW,MACXC,WAAY,MACZL,SAAU,OACVJ,MAAO,OACPU,OAAQ,MACRL,MAAO,oBACPM,WAAY,OAGRC,EAAc,CAClBJ,UAAW,MACXK,QAAS,mBAyIIC,EAtIK,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,gBAAiBC,EAAoC,EAApCA,iBAChCC,GADoE,EAAlBC,YACxCC,eAEhB,QAAQ,GACN,KAAKJ,EAAgBK,OAAS,GAC5B,IAAMC,EAAqBN,EAAgBO,MAAM,EAAG,GACpD,OACE,yBAAKC,UAAU,kBACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACZN,EAAmBnC,KAAI,SAAC0C,GACvB,OACE,kBAACC,EAAA,EAAD,CAAKxC,IAAKuC,EAAQE,MAChB,kBAACC,EAAA,EAAD,CAAMC,MAAOjC,GACX,kBAACgC,EAAA,EAAKE,IAAN,CAAUC,QAAQ,MAAMC,IAAKP,EAAQQ,KAAMJ,MAAO,CAAEtB,OAAQ,UAC5D,kBAACqB,EAAA,EAAKM,KAAN,KACE,kBAACN,EAAA,EAAKO,MAAN,CAAYN,MAAOzB,GAAiBqB,EAAQE,MAC5C,kBAACC,EAAA,EAAKQ,KAAN,CAAWP,MAAO7B,GAAlB,cACcyB,EAAQY,WACnB,KAFH,UAGUZ,EAAQa,OACf,KAJH,WAKWb,EAAQc,QAChB,MAEH,kBAACC,EAAA,EAAD,CACE1D,QAAS,WACP+B,EAAiBY,EAAQE,MACzBb,EAAQ2B,KAAK,aAEfV,QAAQ,eACRW,KAAK,KACLb,MAAOpB,GAPT,iBAqBpB,KAAKG,EAAgBK,OAAS,GAAKL,EAAgBK,OAAS,GAC1D,OACE,yBAAKG,UAAU,kBACb,kBAACC,EAAA,EAAD,CAAWsB,OAAK,EAACd,MAAO,CAAE1B,WAAY,SACpC,kBAACmB,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACZZ,EAAgB7B,KAAI,SAAC0C,GACpB,OACE,kBAACC,EAAA,EAAD,CAAKxC,IAAKuC,EAAQE,MAChB,kBAACC,EAAA,EAAD,CAAMC,MAAOjC,GACX,kBAACgC,EAAA,EAAKE,IAAN,CAAUC,QAAQ,MAAMC,IAAKP,EAAQQ,KAAMJ,MAAO,CAAEtB,OAAQ,UAC5D,kBAACqB,EAAA,EAAKM,KAAN,KACE,kBAACN,EAAA,EAAKO,MAAN,CAAYN,MAAOzB,GAAiBqB,EAAQE,MAC5C,kBAACC,EAAA,EAAKQ,KAAN,CAAWP,MAAO7B,GAAlB,cACcyB,EAAQY,WACnB,KAFH,UAGUZ,EAAQa,OACf,KAJH,WAKWb,EAAQc,QAChB,MAGH,kBAACC,EAAA,EAAD,CACE1D,QAAS,WACP+B,EAAiBY,EAAQE,MACzBb,EAAQ2B,KAAK,aAEfV,QAAQ,eACRW,KAAK,MANP,iBAqBpB,KAAgC,IAA3B9B,EAAgBK,OACnB,OACE,yBAAKG,UAAU,kBACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKE,GAAG,KACN,kBAACE,EAAA,EAAD,CAAKF,GAAI,CAAEoB,KAAM,EAAGC,OAAQ,GAAK3D,IAAK0B,EAAgB,GAAGe,MACvD,kBAACC,EAAA,EAAD,CAAMC,MAAOjC,GACX,kBAACgC,EAAA,EAAKE,IAAN,CACEC,QAAQ,MACRC,IAAKpB,EAAgB,GAAGqB,KACxBJ,MAAO,CAAEtB,OAAQ,UAEnB,kBAACqB,EAAA,EAAKM,KAAN,KACE,kBAACN,EAAA,EAAKO,MAAN,CAAYN,MAAOzB,GAAiBQ,EAAgB,GAAGe,MACvD,kBAACC,EAAA,EAAKQ,KAAN,CAAWP,MAAO7B,GAAlB,cACcY,EAAgB,GAAGyB,WAC9B,KAFH,UAGUzB,EAAgB,GAAG0B,OAC1B,KAJH,WAKW1B,EAAgB,GAAG2B,QAC3B,MAGH,kBAACC,EAAA,EAAD,CACE1D,QAAS,WACP+B,EAAiBD,EAAgB,GAAGe,MACpCb,EAAQ2B,KAAK,aAEfV,QAAQ,eACRW,KAAK,MANP,cAkBhB,QACE,OAAO,O,QCpGEI,EA9DC,SAAC,GAA2C,IAAzClC,EAAwC,EAAxCA,gBAAiBC,EAAuB,EAAvBA,iBAC5BC,EAAUE,cAChB,OACE,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAKF,GAAI,GACP,kBAACgB,EAAA,EAAD,CACE1D,QAAS,WACP+B,EAAiB,IACjBC,EAAQ2B,KAAK,MAEfV,QAAQ,YACRW,KAAK,MANP,UAYJ,kBAACpB,EAAA,EAAD,CAAKE,GAAI,EAAGD,GAAI,GACd,kBAACG,EAAA,EAAD,KACE,kBAACqB,EAAA,EAAD,CAAOf,IAAKpB,EAAgB,GAAGqB,KAAMe,IAAI,OAAOL,OAAK,EAACd,MAAO,CAAExB,UAAW,WAE5E,kBAACqB,EAAA,EAAD,KACE,yBAAKG,MAAO,CAAExB,UAAW,OAAQ4C,WAAY,SAC3C,4BAAKrC,EAAgB,GAAGe,MACxB,yBAAKE,MAAO,CAAE5B,SAAU,OAAQE,WAAY,QAC1C,6CAAmBS,EAAgB,GAAGsC,YAEtC,4CAAkBtC,EAAgB,GAAGyB,YAErC,wCAAczB,EAAgB,GAAG0B,QAEjC,4CAAkB1B,EAAgB,GAAGuC,WAErC,yCAAevC,EAAgB,GAAG2B,SACjC,QAIP,kBAACb,EAAA,EAAD,KACE,yBAAKG,MAAO,CAAExB,UAAW,UACvB,yBAAKwB,MAAO,CAAE5B,SAAU,OAAQE,WAAY,QAC1C,iDAAuBS,EAAgB,GAAGwC,gBAC1C,4CACexC,EAAgB,GAAGyC,WAAWtE,KAAI,SAACuE,GAAD,OAAcA,EAAS3B,SAExE,0CACa,IACVf,EAAgB,GAAG2C,UACjBxE,KAAI,SAAUyE,GACb,OAAOA,EAAI7B,QAEZ8B,KAAK,YCzDXC,EAAa,CACxBC,gBAAiB,kBACjB3F,KAAM,oBACNC,WAAY,mBAGD2F,EAAY,CACvBD,gBAAiB,qBACjB3F,KAAM,mBACNC,WAAY,sB,6ICPP,IAAM4F,EAAeC,YAAH,KAIP,qBAAG/F,MAAkB4F,mBAC1B,qBAAG5F,MAAkBC,Q,gBCQ5B+F,EAAgB,CACpBJ,gBAAiB,qBACjBzD,MAAO,oBAuFM8D,EApFH,WAAO,IAAD,EACkBrF,mBAAS,IAD3B,mBACTsF,EADS,KACEC,EADF,OAE0BvF,mBAAS,IAFnC,mBAETa,EAFS,KAEMqB,EAFN,OAGwBlC,mBAAS,IAHjC,mBAGTD,EAHS,KAGKD,EAHL,OClBS,WAAO,IAAD,EACLE,mBAAS,SADJ,mBACxBZ,EADwB,KACjBoG,EADiB,KAiB/B,OALAC,qBAAU,WACR,IAAMC,EAAaC,OAAOC,aAAaC,QAAQ,SAC/CH,GAAcF,EAASE,KACtB,IAEI,CAACtG,EAfY,WACJ,UAAVA,GACFuG,OAAOC,aAAaE,QAAQ,QAAS,QACrCN,EAAS,UAETG,OAAOC,aAAaE,QAAQ,QAAS,SACrCN,EAAS,YDcgBO,GAJb,mBAIT3G,EAJS,KAIF4G,EAJE,KAMhBP,qBAAU,WACRQ,IAAMC,IAAI,wCAAwCC,MAAK,SAACC,GACtDb,EAAaa,EAASC,WAEvB,IACHC,QAAQC,IAAI,SAAUjB,EAAUhD,OAAQ,aAExC,IAQML,EAJoBqD,EAAUkB,QAAO,SAAC1D,GAAD,OACzCA,EAAQa,OAAO8C,cAAcC,SAAS3G,EAAa0G,kBAGXD,QAAO,SAAC1D,GAAD,OAC/CA,EAAQE,KAAKyD,cAAcC,SAAS7F,EAAc4F,kBAGpD,OACE,kBAAC,IAAD,CAAerH,MAAiB,UAAVA,EAAoB2F,EAAaE,GACrD,kBAAC,IAAD,CAAQ0B,SAAUC,aAChB,kBAAClE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKO,MAAOkC,GACV,kBAACrC,EAAA,EAAD,KACE,wBAAIG,MAAO,CAAErB,WAAY,MAAOP,SAAU,OAAQI,UAAW,SAA7D,wBAIF,kBAACqB,EAAA,EAAD,KACE,kBAACc,EAAA,EAAD,CACEpB,UAAU,cACVS,MAAO,CACL5D,WAAY,qBACZuH,OAAQ,QAEV1G,QAAS6F,GAET,kBAAC,IAAD,CAAiBc,KAAMC,MARzB,eAcJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,YACV,kBAACrE,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,KACE,kBAAC,EAAD,CAASd,gBAAiBA,EAAiBC,iBAAkBA,OAInE,kBAAC,IAAD,CAAO8E,KAAK,KACV,kBAACrE,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAKkE,GAAI,CAAElD,KAAM,SACf,kBAAC,EAAD,CAAQlD,cAAeA,EAAeC,mBAhD3B,SAACoG,GAC1BhF,EAAiBgF,EAAMC,OAAO7G,WAiDlB,kBAACyC,EAAA,EAAD,CAAKkE,GAAI,CAAElD,KAAM,SACf,kBAAC,EAAD,CAAchE,aAAcA,EAAcD,gBAAiBA,MAG/D,kBAAC6C,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAKkE,GAAI,CAAElD,KAAM,SACf,kBAAC,EAAD,CACE9B,gBAAiBA,EACjBC,iBAAkBA,UAQhC,kBAACgD,EAAD,QE5FNkC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ecafb1e9.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nimport styled from 'styled-components'\n\nconst Main = styled.div`\n  font-family: sans-serif;\n\n  width: 10.5em;\n\n  float: right;\n\n  margin-bottom: 0.8em;\n`\n\nconst DropDownContainer = styled.div`\n  width: 10.5em;\n  border: 1px solid hhh;\n  margin-top: 13px;\n`\nconst DropDownHeader = styled.div`\n  box-sizing: border-box;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.15);\n\n  border-radius: 4px;\n\n  font-weight: 300;\n  font-size: 14px;\n  text-align: center;\n\n  padding: 12px 20px 12px 40px;\n  background-position: 10px 10px;\n  background-repeat: no-repeat;\n  color: ${({ theme }) => theme.text};\n  background: ${({ theme }) => theme.background};\n`\nconst DropDownListContainer = styled.div``\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  padding-left: 1em;\n  background: ${({ theme }) => theme.background};\n\n  border: 2px solid #e5e5e5;\n  box-sizing: border-box;\n  color: ${({ theme }) => theme.text};\n  font-size: 14px;\n  font-weight: 300;\n  &:first-child {\n    padding-top: 0.8em;\n  }\n`\nconst ListItem = styled.li`\n  list-style: none;\n  margin-bottom: 0.8em;\n`\nconst Options = ['Asia', 'Europe', 'America', 'Oceania', 'Africa']\nconst FilterRegion = ({ setChosenRegion, chosenRegion }) => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  const onOptionClicked = (value) => () => {\n    setChosenRegion(value)\n    setIsOpen(false)\n  }\n\n  return (\n    <Main>\n      <DropDownContainer>\n        <DropDownHeader\n          onClick={() => {\n            setIsOpen(!isOpen)\n          }}\n        >\n          {chosenRegion || 'Filter by Region'}\n        </DropDownHeader>\n      </DropDownContainer>\n      {isOpen && (\n        <DropDownListContainer>\n          <DropDownList>\n            {Options.map((option) => (\n              <ListItem onClick={onOptionClicked(option)} key={Math.random()}>\n                {option}\n              </ListItem>\n            ))}\n          </DropDownList>\n        </DropDownListContainer>\n      )}\n    </Main>\n  )\n}\n\nexport default FilterRegion\n","import React from 'react'\nimport styled from 'styled-components'\nconst Input = styled.input`\n  border-radius: 4px;\n  box-shadow: 0 2px 3px rgba(0, 0, 0, 0.15);\n  border: none;\n  font-size: 16px;\n  background: ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.text};\n  background-position: 10px 10px;\n  background-repeat: no-repeat;\n  padding: 12px 20px 12px 40px;\n\n  margin-top: 12px;\n`\n\nconst Filter = ({ chosenCountry, handleFilterChange }) => {\n  return (\n    <div>\n      <Input\n        value={chosenCountry}\n        onChange={handleFilterChange}\n        placeholder=\"Search for a country\"\n      />\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nimport { Card } from 'react-bootstrap'\nimport { Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst CardStyle = {\n  width: '10rem',\n  marginBottom: '50px',\n  marginRight: '10px',\n  background: 'hsl(255, 20%, 50%)',\n}\n\nconst CardTextStyle = {\n  fontSize: '14px',\n  width: '100%',\n  color: 'hsl(200, 15%, 8%)',\n  lineHeight: '1.3',\n}\n\nconst CardTitleStyle = {\n  marginTop: '0px',\n  paddingTop: '0px',\n  fontSize: '14px',\n  width: '100%',\n  height: '50%',\n  color: 'hsl(200, 15%, 8%)',\n  fontWeight: '600',\n}\n\nconst ButtonStyle = {\n  marginTop: '0px',\n  padding: '0px 0px 5px 0px',\n}\n\nconst CountryList = ({ countriesToShow, setChosenCountry, handleClick }) => {\n  const history = useHistory()\n\n  switch (true) {\n    case countriesToShow.length > 10: {\n      const countriesToDisplay = countriesToShow.slice(0, 8)\n      return (\n        <div className=\"grid-container\">\n          <Container>\n            <Row xs=\"1\" md=\"4\">\n              {countriesToDisplay.map((country) => {\n                return (\n                  <Col key={country.name}>\n                    <Card style={CardStyle}>\n                      <Card.Img variant=\"top\" src={country.flag} style={{ height: '8rem' }} />\n                      <Card.Body>\n                        <Card.Title style={CardTitleStyle}>{country.name}</Card.Title>\n                        <Card.Text style={CardTextStyle}>\n                          Population:{country.population}\n                          {'\\n'}\n                          Region:{country.region}\n                          {'\\n'}\n                          Capital:{country.capital}\n                          {'\\n'}\n                        </Card.Text>\n                        <Button\n                          onClick={() => {\n                            setChosenCountry(country.name)\n                            history.push('/country')\n                          }}\n                          variant=\"outline-info\"\n                          size=\"sm\"\n                          style={ButtonStyle}\n                        >\n                          show\n                        </Button>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                )\n              })}\n            </Row>\n          </Container>\n        </div>\n      )\n    }\n    case countriesToShow.length > 1 && countriesToShow.length < 10: {\n      return (\n        <div className=\"grid-container\">\n          <Container fluid style={{ lineHeight: '32px' }}>\n            <Row xs=\"1\" md=\"4\">\n              {countriesToShow.map((country) => {\n                return (\n                  <Col key={country.name}>\n                    <Card style={CardStyle}>\n                      <Card.Img variant=\"top\" src={country.flag} style={{ height: '8rem' }} />\n                      <Card.Body>\n                        <Card.Title style={CardTitleStyle}>{country.name}</Card.Title>\n                        <Card.Text style={CardTextStyle}>\n                          Population:{country.population}\n                          {'\\n'}\n                          Region:{country.region}\n                          {'\\n'}\n                          Capital:{country.capital}\n                          {'\\n'}\n                        </Card.Text>\n\n                        <Button\n                          onClick={() => {\n                            setChosenCountry(country.name)\n                            history.push('/country')\n                          }}\n                          variant=\"outline-info\"\n                          size=\"sm\"\n                        >\n                          show\n                        </Button>\n                      </Card.Body>\n                    </Card>\n                  </Col>\n                )\n              })}\n            </Row>\n          </Container>\n        </div>\n      )\n    }\n\n    case countriesToShow.length === 1: {\n      return (\n        <div className=\"grid-container\">\n          <Container>\n            <Row md=\"1\">\n              <Col md={{ span: 3, offset: 5 }} key={countriesToShow[0].name}>\n                <Card style={CardStyle}>\n                  <Card.Img\n                    variant=\"top\"\n                    src={countriesToShow[0].flag}\n                    style={{ height: '8rem' }}\n                  />\n                  <Card.Body>\n                    <Card.Title style={CardTitleStyle}>{countriesToShow[0].name}</Card.Title>\n                    <Card.Text style={CardTextStyle}>\n                      Population:{countriesToShow[0].population}\n                      {'\\n'}\n                      Region:{countriesToShow[0].region}\n                      {'\\n'}\n                      Capital:{countriesToShow[0].capital}\n                      {'\\n'}\n                    </Card.Text>\n\n                    <Button\n                      onClick={() => {\n                        setChosenCountry(countriesToShow[0].name)\n                        history.push('/country')\n                      }}\n                      variant=\"outline-info\"\n                      size=\"sm\"\n                    >\n                      show\n                    </Button>\n                  </Card.Body>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n        </div>\n      )\n    }\n    default:\n      return null\n  }\n}\n\nexport default CountryList\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Image, Button } from 'react-bootstrap'\n\nconst Country = ({ countriesToShow, setChosenCountry }) => {\n  const history = useHistory()\n  return (\n    <Container>\n      <Row>\n        <Col md={4}>\n          <Button\n            onClick={() => {\n              setChosenCountry('')\n              history.push('/')\n            }}\n            variant=\"secondary\"\n            size=\"sm\"\n          >\n            Back\n          </Button>\n        </Col>\n      </Row>\n      <Row md={3} xs={1}>\n        <Col>\n          <Image src={countriesToShow[0].flag} alt=\"flag\" fluid style={{ marginTop: '50px' }} />\n        </Col>\n        <Col>\n          <div style={{ marginTop: '80px', marginLeft: '50px' }}>\n            <h2>{countriesToShow[0].name}</h2>\n            <div style={{ fontSize: '11px', lineHeight: '1.6' }}>\n              <div>Native Name: {countriesToShow[0].nativeName}</div>\n\n              <div>Population: {countriesToShow[0].population}</div>\n\n              <div>Region: {countriesToShow[0].region}</div>\n\n              <div>Sub Region: {countriesToShow[0].subregion}</div>\n\n              <div>Capital: {countriesToShow[0].capital}</div>\n              {'\\n'}\n            </div>\n          </div>\n        </Col>\n        <Col>\n          <div style={{ marginTop: '125px' }}>\n            <div style={{ fontSize: '11px', lineHeight: '1.6' }}>\n              <div>Top Level Domain:{countriesToShow[0].topLevelDomain}</div>\n              <div>\n                Currencies: {countriesToShow[0].currencies.map((currency) => currency.name)}\n              </div>\n              <div>\n                Languages:{' '}\n                {countriesToShow[0].languages\n                  .map(function (lan) {\n                    return lan.name\n                  })\n                  .join(',')}\n              </div>\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default Country\n","export const lightTheme = {\n  backgroundColor: 'hsl(0, 0%, 98%)',\n  text: 'hsl(200, 15%, 8%)',\n  background: 'hsl(0, 0%, 98%)',\n}\n\nexport const darkTheme = {\n  backgroundColor: 'hsl(207, 26%, 17%)',\n  text: 'hsl(0, 0%, 100%)',\n  background: 'hsl(209, 23%, 22%)',\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyles = createGlobalStyle`\n\n  body {\n    \n    background: ${({ theme }) => theme.backgroundColor};\n    color: ${({ theme }) => theme.text};\n    \n  }\n  `\n","import React, { useState, useEffect } from 'react'\nimport Axios from 'axios'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport FilterRegion from './components/FilterRegion'\nimport Filter from './components/Filter'\nimport CountryList from './components/CountryList'\nimport Country from './components/Country'\nimport { useDarkMode } from './useDarkMode'\nimport { Container, Row, Col, Button } from 'react-bootstrap'\nimport { ThemeProvider } from 'styled-components'\nimport { lightTheme, darkTheme } from './theme'\nimport { GlobalStyles } from './global'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMoon } from '@fortawesome/free-solid-svg-icons'\n\nconst rowFirstStyle = {\n  backgroundColor: 'hsl(209, 23%, 22%)',\n  color: 'hsl(0, 0%, 100%)',\n}\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [chosenCountry, setChosenCountry] = useState('')\n  const [chosenRegion, setChosenRegion] = useState('')\n  const [theme, toggleTheme] = useDarkMode()\n\n  useEffect(() => {\n    Axios.get('https://restcountries.eu/rest/v2/all').then((response) => {\n      setCountries(response.data)\n    })\n  }, [])\n  console.log('render', countries.length, 'countries')\n\n  const handleFilterChange = (event) => {\n    setChosenCountry(event.target.value)\n  }\n\n  const regionOfCountries = countries.filter((country) =>\n    country.region.toLowerCase().includes(chosenRegion.toLowerCase()),\n  )\n\n  const countriesToShow = regionOfCountries.filter((country) =>\n    country.name.toLowerCase().includes(chosenCountry.toLowerCase()),\n  )\n\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Container>\n          <Row style={rowFirstStyle}>\n            <Col>\n              <h1 style={{ fontWeight: '800', fontSize: '16px', marginTop: '20px' }}>\n                Where in the world?\n              </h1>\n            </Col>\n            <Col>\n              <Button\n                className=\"float-right\"\n                style={{\n                  background: 'hsl(209, 23%, 22%)',\n                  border: 'none',\n                }}\n                onClick={toggleTheme}\n              >\n                <FontAwesomeIcon icon={faMoon} />\n                Dark Mode\n              </Button>\n            </Col>\n          </Row>\n\n          <Switch>\n            <Route path=\"/country\">\n              <Row>\n                <Col>\n                  <Country countriesToShow={countriesToShow} setChosenCountry={setChosenCountry} />\n                </Col>\n              </Row>\n            </Route>\n            <Route path=\"/\">\n              <Row>\n                <Col sm={{ size: 'auto' }}>\n                  <Filter chosenCountry={chosenCountry} handleFilterChange={handleFilterChange} />\n                </Col>\n                <Col sm={{ size: 'auto' }}>\n                  <FilterRegion chosenRegion={chosenRegion} setChosenRegion={setChosenRegion} />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={{ size: 'auto' }}>\n                  <CountryList\n                    countriesToShow={countriesToShow}\n                    setChosenCountry={setChosenCountry}\n                  />\n                </Col>\n              </Row>\n            </Route>\n          </Switch>\n        </Container>\n      </Router>\n      <GlobalStyles />\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import { useEffect, useState } from 'react'\n\nexport const useDarkMode = () => {\n  const [theme, setTheme] = useState('light')\n  const toggleTheme = () => {\n    if (theme === 'light') {\n      window.localStorage.setItem('theme', 'dark')\n      setTheme('dark')\n    } else {\n      window.localStorage.setItem('theme', 'light')\n      setTheme('light')\n    }\n  }\n\n  useEffect(() => {\n    const localTheme = window.localStorage.getItem('theme')\n    localTheme && setTheme(localTheme)\n  }, [])\n\n  return [theme, toggleTheme]\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.css'\n\nimport './myStyle.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}